
name: Build, Generate Signatures & Update latest.json

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-signature:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Private Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Configure Git to use HTTPS with PAT
        run: |
          git config --global --add url."https://${{ secrets.TYPES_REPO_TOKEN }}@github.com/".insteadOf "ssh://git@github.com/"
          git config --global --add url."https://${{ secrets.TYPES_REPO_TOKEN }}@github.com/".insteadOf "git+ssh://git@github.com/"
          git config --global --add url."https://${{ secrets.TYPES_REPO_TOKEN }}@github.com/".insteadOf "git@github.com:"

      - name: Debug Git config
        run: git config --global --get-regexp url

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.5.0'  # Use the version required by your project

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run tauri build

      - name: Generate Signatures
        run: npm run generate-signatures
        # Ensure you have a "generate-signatures" script in your package.json
        # that creates signature files, e.g., signatures/linux.txt, signatures/windows.txt, signatures/darwin.txt

      - name: Create latest.json
        id: create_latest
        run: |
          # Read generated signature files (update file paths as needed)
          WINDOWS_SIG=$(cat signatures/windows.txt)
          # Retrieve version from package.json (or set it manually)
          VERSION=$(node -p "require('./package.json').version")
          NOTES="Release notes go here"  # Update as needed
          PUB_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          # Create the latest.json file with the dynamic content
          cat <<EOF > latest.json
          {
            "version": "$VERSION",
            "notes": "$NOTES",
            "pub_date": "$PUB_DATE",
            "platforms": {
              "windows-x86_64": {
                "signature": "$WINDOWS_SIG",
                "url": "https://example.com/windows-download-url"
              }
            }
          }
          EOF
      - name: Checkout Public Repository
        uses: actions/checkout@v2
        with:
          repository: errolgr/dmg-meter-updates
          token: ${{ secrets.TARGET_REPO_TOKEN }}
          ref: main
          path: releases

      - name: Copy latest.json to Public Repository
        run: cp latest.json releases/

      - name: Commit and Push Changes to Public Repository
        working-directory: releases
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add latest.json
          if ! git diff --cached --quiet; then
            git commit -m "Update latest.json from private repo (tag: ${{ github.ref_name }})"
            git push
          else
            echo "No changes to commit."
          fi